# ================================== Словарь ============================================
# Словарь. Словарь хранит в себе ключ-значение. Ключами в словаре не могут быть изменяемые типы данных
age = {'Rashid': 17, 'Ali': 12}
print(age)

# ========================= Методы =================================
# Для обращения к элементу словаря необходимо указать ключ
print(age['Rashid'])

# Заменяем значение ключа
age['Ali'] = 10
print(age)

# Добавляем элемент в словарь
age['Ahmed'] = 12
print(age)

# Удаляем элемент в словаре
del age['Ali']
print(age)

# Массовое добавление и изменение элементов словаря
age.update({'Ali': 10,
            'Alex': 20,
            'Rashid': 18})
print(age)

# Возвращаем значение по ключу. Особенность - (Если ключ не найден, возвращается None), (Можно указать значение по умолчанию, если такой ключ не найден)
print(age.get('Rashid', 'Такого ключа нет!'))
print(age.get('Artem', 'Такого ключа нет!'))

# Удаляем со словаря ключ и сохраняем значение (Такой же метод работает со списками)
print(age)
a = age.pop('Ahmed')
print(age)
print(a)

# Выводим список ключей в словаре
print(age.keys())

# Выводим все значения в словаре
print(age.values())

# Выводим пару ключ-значение
print(age.items())

# В качестве значения в словаре могут быть изменяемые типы данных
age['Rashid'] = [17, 18, 19]
print(age)


# =============================================== Множества =================================================
# В множествах не могут быть два одинаковых значения
set_1 = {1, 2, (1, 2, True), 3, 4, 5, 'String', 1, 6, 3, 4, 5, 2, 1,}
print(set_1)

# Создаем множество из списка
list_1 = [1, 3, 'String', 2, 'String', 1]
list_1 = set(list_1)
print(list_1)

# Удаляем элемент из множества (Не выдает ошибку если элемент не найден)
list_1.discard(4)
print(list_1)

# Удаляем элемент из множества (Выдает ошибку если элемент не найден)
list_1.remove(2)
print(list_1)

# Добавляем элемент в список
list_1.add(2)
print(list_1)







